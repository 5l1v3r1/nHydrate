<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>